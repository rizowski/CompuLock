Week 5:
	- 
	Notes:
		- Restsharp was added to the project.
		- Time sheet was added to keep track of how much time I am spending on the project to see if I need to make up for any time and if I am making minimum quota.
			- http://goo.gl/41neE
	TODOS: 
		Web: 
			- Authorization on the api needs to be fixed/added
			API:
				- Account Api needs to be completed
					- |Done| Index - Grabs all accounts via the auth token Only that users accounts
					- |Done| Create - Create an account via auth token and variables
					- |Done| Show - Shows only 1 account via the auth token and provided Index
					- |Done| Update - SAves 1 account via auth token
					- |Done| Destroy - Deletes an account via Auth token
				- Computer Api needs to be completed
					- |Done| Index
					- |Done| Create
					- |Done| Update
					- |Done| Show
					- |Done| Destroy
				- User api needs to be completed
					- |Done| Index
					- |Done| Update
				- |Done| To limit what is sent -http://railscasts.com/episodes/348-the-rails-api-gem?view=asciicast
				- Possibly add Is admin if id isn't within their account ids
			Database:
				- No - Perhaps redesign the Database models for account history and programs. remove prefix
			Account:
				- processes don't display under a specific account
			Controllers:
				- |Done| User routing Unit Testing
				- |Done| Computer routing Unit Testing
				- |Done| Account routing Unit Testing
				- Finish up logic for all controllers destroy update edit etc
		Desktop:
			- Database for desktop needs to be added/fixed
			JSON_API:
				Computer:
					- |Done| Index
					- |Done| Create
					- |Done| Update
					- |Done| Show
					- |Done| Destroy
				Account:
					- |Done| Index
					- |Done| Create
					- |Done| Update
					- |Done| Show
					- |Done| Destroy
					History:
						- Create
						- |Done| Get all for account
					Processes:
						- Create
						- |Done| Get all for account
					Programs:
						- Create
						- |Done| Get all for account
				User:
					- |Done| Index
					- |Done| Update
			- Database design from Week 4 to include scheduling
	Resources:
		- http://restsharp.org/
		RestSharp:
			- http://restsharp.org/
			- http://stackoverflow.com/questions/11803485/how-to-parse-json-using-restsharp
		JSON.net:
			- http://james.newtonking.com/pages/json-net.aspx
		Token Authentication:
			- http://blog.codebykat.com/2012/07/23/remote-api-authentication-with-rails-3-using-activeresource-and-devise/
			- http://zyphdesignco.com/blog/simple-auth-token-example-with-devise
			- http://railscasts.com/episodes/352-securing-an-api?view=asciicast

Next week:
	- send all data

Week 6:
	Notes:
		- 
	Todo:
		Web:
			REST:
				- Add Processes
					- Add
				- Add History
					- Add
				- Add Programs
					- Add
			Links:
				- Navigation Links
					- |Done| Fix Broken
					- 
			Controllers:
				Computers:
					- |Done| Index
					- |Done| Show
					- |Done| Edit
					- |Done| Update
					- |Done| Destroy
				Users:
					- |Done| Index => Switching to Profile
						- Profile
					- List => Admin only
				Accounts:
					- |Done| Index
					- |Done| List
					- Show
						- Processes => Error with finding record? shows proces not process
						- |Done| Histories
						- |Done| Programs
					- |Done| Edit
					- |Done| Update
		Desktop:
			REST 2.0:
				- RestUser
					- Show
					- Update
				- RestAccount
					- Index
					- Update
					- Show
					- Add
					- Destroy
				- RestComputer
					- Add
					- Update
					- Show
					- Index
				- RestProcess
					- Add
					- Update
				- RestPrograms
					- Add
					- Update
				- RestHistory
					- Add
					- Update
			Database:
				- Saving
					- Computers
					- users
					- accounts
					- Programs
					- Processes
					- History
				- retrieving
					- The above
		Testing:
			- Test for why Processes isn't working 
			- Test Data persisting